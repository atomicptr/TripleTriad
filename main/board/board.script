local Grid = require "main.data.grid"

local Pos = Grid.Pos

local card_pos = {
    [Pos.North] = {
        [Pos.West] = vmath.vector3(-200, 200, 0),
        [Pos.Center] = vmath.vector3(0, 200, 0),
        [Pos.East] = vmath.vector3(200, 200, 0),
    },
    [Pos.Center] = {
        [Pos.West] = vmath.vector3(-200, 0, 0),
        [Pos.Center] = vmath.vector3(0, 0, 0),
        [Pos.East] = vmath.vector3(200, 0, 0),
    },
    [Pos.South] = {
        [Pos.West] = vmath.vector3(-200, -200, 0),
        [Pos.Center] = vmath.vector3(0, -200, 0),
        [Pos.East] = vmath.vector3(200, -200, 0),
    },
}

---@class Board
---@field field table
---@field selected_card integer
---@field cursor_moving boolean
---@field cursor_row Pos
---@field cursor_col Pos

---@param self Board
function init(self)
    self.selected_card = nil
    self.cursor_row = Pos.Center
    self.cursor_col = Pos.Center
    self.cursor_moving = false
end

---@param self Board
---@param row Pos
---@param col Pos
---@param skip_anim boolean|nil
function set_cursor(self, row, col, skip_anim)
    self.cursor_row = row
    self.cursor_col = col

    msg.post("/cursor", "move", {
        target_pos = card_pos[self.cursor_row][self.cursor_col],
        skip_anim = skip_anim,
    })
end

---@param self Board
---@param direction "up"|"down"|"left"|"right"
local function apply_cursor_movement(self, direction)
    if direction == "up" then
        if self.cursor_row == Pos.North then
            set_cursor(self, Pos.South, self.cursor_col)
        elseif self.cursor_row == Pos.Center then
            set_cursor(self, Pos.North, self.cursor_col)
        else
            set_cursor(self, Pos.Center, self.cursor_col)
        end
    elseif direction == "down" then
        if self.cursor_row == Pos.North then
            set_cursor(self, Pos.Center, self.cursor_col)
        elseif self.cursor_row == Pos.Center then
            set_cursor(self, Pos.South, self.cursor_col)
        else
            set_cursor(self, Pos.North, self.cursor_col)
        end
    elseif direction == "left" then
        if self.cursor_col == Pos.West then
            set_cursor(self, self.cursor_row, Pos.East)
        elseif self.cursor_col == Pos.Center then
            set_cursor(self, self.cursor_row, Pos.West)
        else
            set_cursor(self, self.cursor_row, Pos.Center)
        end
    elseif direction == "right" then
        if self.cursor_col == Pos.West then
            set_cursor(self, self.cursor_row, Pos.Center)
        elseif self.cursor_col == Pos.Center then
            set_cursor(self, self.cursor_row, Pos.East)
        else
            set_cursor(self, self.cursor_row, Pos.West)
        end
    end
end

---@param self Board
---@param player_card boolean
function place_card(self, player_card)
    factory.create("#card_factory", card_pos[self.cursor_row][self.cursor_col], nil, {
        card_id = self.selected_card,
        player_card = player_card,
    })

    msg.post("/game", "board_place_card_finished", {
        card = self.selected_card,
        row = self.cursor_row,
        col = self.cursor_col,
    })

    self.selected_card = nil
end

---@param self Board
---@param message_id hash
---@param message table
---@param sender hash
function on_message(self, message_id, message, sender)
    if message_id == hash "init" then
        pprint "board: init"

        self.selected_card = message.selected_card
        set_cursor(self, Pos.Center, Pos.Center, true)
    elseif message_id == hash "select" then
        pprint "board: select"

        msg.post("/game", "board_request_place_card", {
            card = self.selected_card,
            row = self.cursor_row,
            col = self.cursor_col,
        })
    elseif message_id == hash "place_card" then
        pprint "board: place_card"

        place_card(self, message.player_card)
    elseif message_id == hash "enemy_place" then
        pprint "board: enemy_place"

        self.selected_card = message.selected_card

        set_cursor(self, message.row, message.col, true)
        place_card(self, false)
    elseif message_id == hash "move_cursor" then
        pprint "board: move_cursor"

        apply_cursor_movement(self, message.direction)
    elseif message_id == hash "cursor_done_moving" then
        self.cursor_moving = false
    end
end
